# DatabaseSeeds::CrmApis.seed(crm_base_id)
module DatabaseSeeds
  module CrmApis
    def self.seed crm_base_id
      crm_base = Crm::Base.where(id: crm_base_id).first

      # puts Crm::Api.unscoped.where(base_id: crm_base_id).as_json(only: %w(_type resource_class event path request_payload http_method response_crm_id_location))
      interakt_crm_data = [
        {"event" => "", "path" => "/v1/public/track/users/", "request_payload" => "<% ph = Phonelib.parse(self.event_payload&.dig('phone', 0) || self.phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",    \n    \"traits\": {\n        \"first_name\": \"<%= first_name %>\",\n        \"last_name\": \"<%= last_name %>\",\n        \"name\": \"<%= name %>\",\n        \"email\": \"<%= email %>\",\n        \"phone\": \"<%= phone %>\",\n        \"role\": \"<%= role %>\",\n        \"sourcing_manager_projects\": \"<%= Project.in(id: (event_payload&.dig('project_ids', 1) || project_ids)).pluck(:name)&.to_sentence %>\",\n        \"company_name\": \"<%= event_payload&.dig('company_name', 1) || event_payload.dig('channel_partner', 'company_name') || channel_partner&.company_name %>\",\n        \"company_type\": \"<%= event_payload&.dig('company_type', 1) || event_payload.dig('channel_partner', 'company_type') || channel_partner&.company_type %>\",\n        \"company_owner_name\": \"<%= event_payload&.dig('primary_owner', 'first_name') || event_payload&.dig('channel_partner', 'primary_user', 'name') || channel_partner&.primary_user&.name %>\",\n        \"company_owner_phone\": \"<%= event_payload&.dig('primary_owner', 'phone') || event_payload&.dig('channel_partner', 'primary_user', 'phone') || channel_partner&.primary_user&.phone %>\",\n        \"interested_services\": \"<%= (event_payload&.dig('interested_services', 1) || event_payload.dig('channel_partner', 'interested_services') || channel_partner&.interested_services)&.to_sentence %>\",\n        \"developers_worked_for\": \"<%= (event_payload&.dig('developers_worked_for', 1) || event_payload.dig('channel_partner', 'developers_worked_for') || channel_partner&.developers_worked_for)&.to_sentence %>\",\n        \"pan_number\": \"<%= event_payload&.dig('pan_number', 1) || event_payload.dig('channel_partner', 'pan_number') || channel_partner&.pan_number %>\",\n        \"rera_number\": \"<%= event_payload&.dig('rera_id', 1) || event_payload.dig('channel_partner', 'rera_id') || channel_partner&.rera_id %>\",\n        \"gstin_number\": \"<%= event_payload&.dig('gstin_number', 1) || event_payload.dig('channel_partner', 'gstin_number') || channel_partner&.gstin_number %>\",\n        \"manager_name\": \"<%= manager&.name %>\",\n        \"regions\": \"<%= (event_payload&.dig('regions', 1) || event_payload.dig('channel_partner', 'regions') || channel_partner&.regions)&.to_sentence %>\",\n        \"status\": \"<%= event_payload&.dig('status', 1) || event_payload.dig('channel_partner', 'status') || channel_partner&.status %>\",\n        \"referred_by_name\": \"<%= referred_by&.name %>\",\n        \"projects_subscribed\": \"<%= event_payload.dig('interested_projects')&.to_sentence %>\",\n        \"user_account_status\": \"<%= self.event_payload.dig('user_status_in_company', 1) || self.user_status_in_company %>\",\n        \"user_account_rejection_reason\": \"<%= self.event_payload.dig('rejection_reason', 1) || self.rejection_reason %>\",\n        \"sign_in_count\": \"<%= event_payload.dig('sign_in_count', 1) || self.sign_in_count %>\",\n        \"last_sign_in_time\": \"<%= I18n.l((event_payload.dig('current_sign_in_at', 1) || self.current_sign_in_at || Time.now).in_time_zone(self.time_zone)) %>\"\n    },\n    \"createdAt\": \"<%= created_at&.iso8601 %>\"\n}", "resource_class" => "User"},
        {"event"=>"Company Onboarding State Change", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Company Onboarding State Change\",\n    \"traits\": {\n        status: \"<%= self.event_payload&.dig('status', 1) || self.channel_partner&.status %>\",\n        rejection_reason: \"<%= self.channel_partner&.rejected? ? (self.event_payload&.dig('status_change_reason', 1) || self.channel_partner&.status_change_reason) : '' %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Manager Changed", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Manager Changed\",\n    \"traits\": {\n        manager_name: \"<%= self.manager_name %>\",\n        manager_email: \"<%= self.manager&.email %>\",\n        manager_phone: \"<%= self.manager&.phone %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Region Added", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Region Added\",\n    \"traits\": {\n        region_name: \"<%= self.event_payload['region_added'] %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Region Removed", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Region Removed\",\n    \"traits\": {\n        region_name: \"<%= self.event_payload['region_removed'] %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Project Subscribed", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Project Subscribed\",\n    \"traits\": {\n        project_name: \"<%= self.event_payload.dig('project', 'name') %>\",\n        developer_name: \"<%= self.event_payload.dig('project', 'developer_name') %>\",\n        project_region: \"<%= self.event_payload.dig('project', 'region') %>\",\n        project_type: \"<%= self.event_payload.dig('project', 'project_type')&.to_sentence %>\",\n        city: \"<%= self.event_payload.dig('project', 'city') %>\",\n        location: \"<%= self.event_payload.dig('project', 'micro_market') %>\",\n        category: \"<%= self.event_payload.dig('project', 'category')&.to_sentence %>\",\n        segment: \"<%= self.event_payload.dig('project', 'project_segment')&.to_sentence %>\",\n        possession_date: \"<%= self.event_payload.dig('project', 'possession') %>\",\n        launch_date: \"<%= self.event_payload.dig('project', 'launched_on') %>\",\n        rera: \"<%= self.event_payload.dig('project', 'rera_registration_no') %>\",\n        configurations: \"<%= self.event_payload.dig('project', 'configurations')&.to_sentence %>\",\n        starting_price: \"<%= self.event_payload.dig('project', 'price_starting_from') %>\",\n        max_price: \"<%= self.event_payload.dig('project', 'price_upto') %>\",\n        total_units: \"<%= self.event_payload.dig('project', 'total_units') %>\",\n        broker_usp: \"<%= self.event_payload.dig('project', 'broker_usp')&.to_sentence %>\",\n        site_visit_incentive: \"<%= self.event_payload.dig('project', 'sv_incentive') %>\",\n        spot_booking_incentive: \"<%= self.event_payload.dig('project', 'spot_booking_incentive') %>\",\n        pre_registration_incentive_percentage: \"<%= self.event_payload.dig('project', 'pre_reg_incentive_percentage') %>\",\n        pre_registraion_min_bookings: \"<%= self.event_payload.dig('project', 'pre_reg_min_bookings') %>\",\n        logo: \"<%= self.event_payload.dig('project', 'logo_url') %>\",\n        cover_photo: \"<%= self.event_payload.dig('project', 'cover_photo_url') %>\",\n        mobile_logo: \"<%= self.event_payload.dig('project', 'mobile_logo_url') %>\",\n        mobile_cover_photo: \"<%= self.event_payload.dig('project', 'mobile_cover_photo_url') %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        { "event" => "New Walkin Scheduled", "path" => "/v1/public/track/events/", "request_payload" => "<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"New Walkin Scheduled\",\n    \"traits\": {\n        project_name: \"<%= self.event_payload.dig('project', 'name') %>\",\n        developer_name: \"<%= self.event_payload.dig('project', 'developer_name') %>\",\n        project_location: \"<%= self.event_payload.dig('project', 'micro_market') %>\",\n        project_city: \"<%= self.event_payload.dig('project', 'city') %>\",\n        customer_name: \"<%= self.event_payload.dig('lead', 'name') %>\",\n        customer_email: \"<%= self.event_payload.dig('lead', 'email') %>\",\n        customer_phone: \"<%= self.event_payload.dig('lead', 'phone') %>\",\n        scheduled_on: \"<%= I18n.l((self.event_payload.dig('scheduled_on', 1) || self.event_payload.dig('site_visit', 'scheduled_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        status: \"<%= self.event_payload.dig('status', 1) || self.event_payload.dig('site_visit', 'status') %>\",\n        manager_name: \"<%= self.event_payload.dig('manager', 'name') %>\",\n        manager_phone: \"<%= self.event_payload.dig('manager', 'phone') %>\",\n        manager_email: \"<%= self.event_payload.dig('manager', 'email') %>\",\n        manager_role: \"<%= self.event_payload.dig('manager', 'role') %>\",\n        walkins_count: \"<%= self.event_payload.dig('sv_count') %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class" => "User" },
        {"event"=>"Walkin Conducted", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Walkin Conducted\",\n    \"traits\": {\n        project_name: \"<%= self.event_payload.dig('project', 'name') %>\",\n        developer_name: \"<%= self.event_payload.dig('project', 'developer_name') %>\",\n        project_location: \"<%= self.event_payload.dig('project', 'micro_market') %>\",\n        project_city: \"<%= self.event_payload.dig('project', 'city') %>\",\n        customer_name: \"<%= self.event_payload.dig('lead', 'name') %>\",\n        customer_email: \"<%= self.event_payload.dig('lead', 'email') %>\",\n        customer_phone: \"<%= self.event_payload.dig('lead', 'phone') %>\",\n        scheduled_on: \"<%= I18n.l((self.event_payload.dig('scheduled_on', 1) || self.event_payload.dig('site_visit', 'scheduled_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        conducted_on: \"<%= I18n.l((self.event_payload.dig('conducted_on', 1) || self.event_payload.dig('site_visit', 'conducted_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        status: \"<%= self.event_payload.dig('status', 1) || self.event_payload.dig('site_visit', 'status') %>\",\n        conducted_by: \"<%= self.event_payload.dig('conducted_by', 1) || self.event_payload.dig('site_visit', 'conducted_by') %>\",\n        manager_name: \"<%= self.event_payload.dig('manager', 'name') %>\",\n        manager_phone: \"<%= self.event_payload.dig('manager', 'phone') %>\",\n        manager_email: \"<%= self.event_payload.dig('manager', 'email') %>\",\n        manager_role: \"<%= self.event_payload.dig('manager', 'role') %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Walkin Rescheduled", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Walkin Rescheduled\",\n    \"traits\": {\n        project_name: \"<%= self.event_payload.dig('project', 'name') %>\",\n        developer_name: \"<%= self.event_payload.dig('project', 'developer_name') %>\",\n        project_location: \"<%= self.event_payload.dig('project', 'micro_market') %>\",\n        project_city: \"<%= self.event_payload.dig('project', 'city') %>\",\n        customer_name: \"<%= self.event_payload.dig('lead', 'name') %>\",\n        customer_email: \"<%= self.event_payload.dig('lead', 'email') %>\",\n        customer_phone: \"<%= self.event_payload.dig('lead', 'phone') %>\",\n        scheduled_on: \"<%= I18n.l((self.event_payload.dig('scheduled_on', 1) || self.event_payload.dig('site_visit', 'scheduled_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        status: \"<%= self.event_payload.dig('status', 1) || self.event_payload.dig('site_visit', 'status') %>\",\n        manager_name: \"<%= self.event_payload.dig('manager', 'name') %>\",\n        manager_phone: \"<%= self.event_payload.dig('manager', 'phone') %>\",\n        manager_email: \"<%= self.event_payload.dig('manager', 'email') %>\",\n        manager_role: \"<%= self.event_payload.dig('manager', 'role') %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Walkin Approved", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Walkin Approved\",\n    \"traits\": {\n        project_name: \"<%= self.event_payload.dig('project', 'name') %>\",\n        developer_name: \"<%= self.event_payload.dig('project', 'developer_name') %>\",\n        project_location: \"<%= self.event_payload.dig('project', 'micro_market') %>\",\n        project_city: \"<%= self.event_payload.dig('project', 'city') %>\",\n        customer_name: \"<%= self.event_payload.dig('lead', 'name') %>\",\n        customer_email: \"<%= self.event_payload.dig('lead', 'email') %>\",\n        customer_phone: \"<%= self.event_payload.dig('lead', 'phone') %>\",\n        scheduled_on: \"<%= I18n.l((self.event_payload.dig('scheduled_on', 1) || self.event_payload.dig('site_visit', 'scheduled_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        conducted_on: \"<%= I18n.l((self.event_payload.dig('conducted_on', 1) || self.event_payload.dig('site_visit', 'conducted_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        status: \"<%= self.event_payload.dig('status', 1) || self.event_payload.dig('site_visit', 'status') %>\",\n        conducted_by: \"<%= self.event_payload.dig('conducted_by', 1) || self.event_payload.dig('site_visit', 'conducted_by') %>\",\n        manager_name: \"<%= self.event_payload.dig('manager', 'name') %>\",\n        manager_phone: \"<%= self.event_payload.dig('manager', 'phone') %>\",\n        manager_email: \"<%= self.event_payload.dig('manager', 'email') %>\",\n        manager_role: \"<%= self.event_payload.dig('manager', 'role') %>\",\n        approval_status: \"<%= self.event_payload.dig('approval_status', 1) %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Walkin Rejected", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Walkin Rejected\",\n    \"traits\": {\n        project_name: \"<%= self.event_payload.dig('project', 'name') %>\",\n        developer_name: \"<%= self.event_payload.dig('project', 'developer_name') %>\",\n        project_location: \"<%= self.event_payload.dig('project', 'micro_market') %>\",\n        project_city: \"<%= self.event_payload.dig('project', 'city') %>\",\n        customer_name: \"<%= self.event_payload.dig('lead', 'name') %>\",\n        customer_email: \"<%= self.event_payload.dig('lead', 'email') %>\",\n        customer_phone: \"<%= self.event_payload.dig('lead', 'phone') %>\",\n        scheduled_on: \"<%= I18n.l((self.event_payload.dig('scheduled_on', 1) || self.event_payload.dig('site_visit', 'scheduled_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        conducted_on: \"<%= I18n.l((self.event_payload.dig('conducted_on', 1) || self.event_payload.dig('site_visit', 'conducted_on') || Time.now)&.in_time_zone(self.event_payload.dig('manager', 'time_zone'))) %>\",\n        status: \"<%= self.event_payload.dig('status', 1) || self.event_payload.dig('site_visit', 'status') %>\",\n        conducted_by: \"<%= self.event_payload.dig('conducted_by', 1) || self.event_payload.dig('site_visit', 'conducted_by') %>\",\n        manager_name: \"<%= self.event_payload.dig('manager', 'name') %>\",\n        manager_phone: \"<%= self.event_payload.dig('manager', 'phone') %>\",\n        manager_email: \"<%= self.event_payload.dig('manager', 'email') %>\",\n        manager_role: \"<%= self.event_payload.dig('manager', 'role') %>\",\n        approval_status: \"<%= self.event_payload.dig('approval_status', 1) %>\",\n        rejection_notes: \"<%= self.event_payload.dig('note', 1) || self.event_payload.dig('site_visit', 'notes')&.collect {|x| x['note']}&.to_sentence %>\"\n    },\n    \"createdAt\": \"<%= Time.now.iso8601 %>\"\n}", "resource_class"=>"User"},
        {"event"=>"Account Active", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Account Active\",\n    \"traits\": {\n       \"account_status\": \"<%= self.event_payload.dig('is_active', 1).present? ? 'active' : 'inactive' %>\"\n    }\n}", "resource_class"=>"User"},
        {"event"=>"Account Inactive", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Account Inactive\",\n    \"traits\": {\n       \"account_status\": \"<%= self.event_payload.dig('is_active', 1).present? ? 'active' : 'inactive' %>\"\n    }\n}", "resource_class"=>"User"},
        {"event"=>"First Sign In", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"First Sign In\",\n    \"traits\": {\n        \"sign_in_count\": \"<%= event_payload.dig('sign_in_count', 1) || self.sign_in_count %>\",\n        \"sign_in_time\": \"<%= I18n.l((event_payload.dig('current_sign_in_at', 1) || self.current_sign_in_at || Time.now).in_time_zone(self.time_zone)) %>\"\n    }\n}", "resource_class"=>"User"},
        {"event"=>"Event Subscribed", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Event Subscribed\",\n    \"traits\": {\n       \"topic\": \"<%= self.event_payload.dig('meeting', 'topic') %>\",\n       \"meeting_type\": \"<%= self.event_payload.dig('meeting', 'meeting_type') %>\",\n       \"provider\": \"<%= self.event_payload.dig('meeting', 'provider') %>\",\n       \"provider_url\": \"<%= self.event_payload.dig('meeting', 'provider_url') %>\",\n       \"scheduled_on\": \"<%= self.event_payload.dig('meeting', 'scheduled_on') %>\",\n       \"duration\": \"<%= self.event_payload.dig('meeting', 'duration') %>\",\n       \"agenda\": \"<%= self.event_payload.dig('meeting', 'agenda') %>\",\n       \"project_name\": \"<%= self.event_payload.dig('project', 'name') %>\",\n       \"campaign_name\": \"<%= self.event_payload.dig('campaign', 'name') %>\",\n       \"image_url\": \"<%= (self.event_payload.dig('meeting', 'assets') || []).select {|x| x['document_type'] == 'photo'}.first.try(:[], 'file').try(:[], 'url') %>\"\n    }\n}", "resource_class"=>"User"},
        {"event"=>"Event Unsubscribed", "path"=>"/v1/public/track/events/", "request_payload"=>"<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Event Unsubscribed\",\n    \"traits\": {\n       \"topic\": \"<%= self.event_payload.dig('meeting', 'topic') %>\",\n       \"meeting_type\": \"<%= self.event_payload.dig('meeting', 'meeting_type') %>\",\n       \"provider\": \"<%= self.event_payload.dig('meeting', 'provider') %>\",\n       \"provider_url\": \"<%= self.event_payload.dig('meeting', 'provider_url') %>\",\n       \"scheduled_on\": \"<%= self.event_payload.dig('meeting', 'scheduled_on') %>\",\n       \"duration\": \"<%= self.event_payload.dig('meeting', 'duration') %>\",\n       \"agenda\": \"<%= self.event_payload.dig('meeting', 'agenda') %>\",\n       \"project_name\": \"<%= self.event_payload.dig('project', 'name') %>\",\n       \"campaign_name\": \"<%= self.event_payload.dig('campaign', 'name') %>\",\n       \"image_url\": \"<%= (self.event_payload.dig('meeting', 'assets') || []).select {|x| x['document_type'] == 'photo'}.first.try(:[], 'file').try(:[], 'url') %>\"\n    }\n}", "resource_class"=>"User"},
        {"event" => "Joined Existing Company", "path" => "/v1/public/track/events/", "request_payload" => "<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Joined Existing Company\",\n    \"traits\": {\n        company_name: \"<%= self.event_payload.dig('channel_partner', 'company_name') %>\",\n        owner_name: \"<%= self.event_payload.dig('channel_partner', 'primary_user', 'name') %>\",\n        owner_email: \"<%= self.event_payload.dig('channel_partner', 'primary_user', 'email') %>\",\n        owner_phone: \"<%= self.event_payload.dig('channel_partner', 'primary_user', 'phone') %>\",\n        manager_name: \"<%= self.event_payload.dig('channel_partner', 'manager', 'name') %>\",\n        manager_email: \"<%= self.event_payload.dig('channel_partner', 'manager', 'email') %>\",\n        manager_phone: \"<%= self.event_payload.dig('channel_partner', 'manager', 'phone') %>\"\n    }\n}", "resource_class" => "User"},
        {"event" => "Registered New Company", "path" => "/v1/public/track/events/", "request_payload" => "<% ph = Phonelib.parse(phone) %>\n{\n    \"userId\": \"<%= id.to_s %>\",\n    \"phoneNumber\": \"<%= ph&.national(false)&.last(10) %>\",\n    \"countryCode\": \"+<%= ph&.country_code %>\",\n    \"event\": \"Registered New Company\",\n    \"traits\": {\n        company_name: \"<%= self.event_payload.dig('channel_partner', 'company_name') %>\",\n        owner_name: \"<%= self.event_payload.dig('channel_partner', 'primary_user', 'name') %>\",\n        owner_email: \"<%= self.event_payload.dig('channel_partner', 'primary_user', 'email') %>\",\n        owner_phone: \"<%= self.event_payload.dig('channel_partner', 'primary_user', 'phone') %>\",\n        manager_name: \"<%= self.event_payload.dig('channel_partner', 'manager', 'name') %>\",\n        manager_email: \"<%= self.event_payload.dig('channel_partner', 'manager', 'email') %>\",\n        manager_phone: \"<%= self.event_payload.dig('channel_partner', 'manager', 'phone') %>\"\n    }\n}", "resource_class" => "User"}
      ]

      razorpay_crm_data = [
        {"_type"=>"Crm::Api::Post", "path"=>"/v1/contacts", "request_payload"=>"{\n  \"name\": \"<%= Phonelib.parse(self.phone).sanitized %>\",\n  \"email\": \"<%= self.email %>\",\n  \"contact\": <%= Phonelib.parse(self.phone).sanitized %>,\n  \"type\": \"customer\",\n  \"reference_id\": \"<%= self.id.to_s %>\"\n}", "resource_class"=>"User"},
        {"_type"=>"Crm::Api::Post", "path"=>"/v1/fund_accounts", "request_payload"=>"<% crm_base = Crm::Base.where(domain: ENV_CONFIG.dig(:razorpay, :base_url)).first %>\n{\n  \"contact_id\": \"<%= self.user&.crm_reference_id(crm_base) %>\",\n  \"account_type\": \"vpa\",\n  \"vpa\": {\n    \"address\": \"<%= self.address %>\"\n  }\n}", "resource_class"=>"FundAccount"},
        {"_type"=>"Crm::Api::Post", "path"=>"/v1/payouts", "request_payload"=>"{\n  \"account_number\": \"2323230082969142\",\n  \"fund_account_id\": \"<%= self.event_payload&.dig('fund_account_id') %>\",\n  \"amount\": <%= self.net_amount * 100 %>,\n  \"currency\": \"INR\",\n  \"mode\": \"UPI\",\n  \"purpose\": \"payout\",\n  \"reference_id\": \"<%= self.id.to_s %>\"\n}", "resource_class"=>"Invoice"},
        {"_type"=>"Crm::Api::Put", "http_method"=>"patch", "path"=>"/v1/fund_accounts/<%= self.crm_reference_id(ENV_CONFIG.dig(:razorpay, :base_url)) %>", "request_payload"=>"{\n    'active': <%= self.is_active? %>\n}", "resource_class"=>"FundAccount"}
      ]

      onesignal_crm_data = [
           {
                                 "event" => "",
                           "http_method" => "put",
                             "is_active" => true,
                                  "path" => "/api/v1/apps/<%= ENV_CONFIG[:onesignal][:app_id] %>/users/<%= self.id.to_s %>",
                       "request_payload" => "{tags: {\n    \"first_name\": \"<%= first_name %>\",\n    \"last_name\": \"<%= last_name %>\",\n    \"name\": \"<%= name %>\",\n    \"email\": \"<%= email %>\",\n    \"phone\": \"<%= phone %>\",\n    \"role\": \"<%= role %>\",\n    \"sourcing_manager_projects\": \"<%= Project.in(id: (event_payload&.dig('project_ids', 1) || project_ids)).pluck(:name)&.to_sentence %>\",\n    \"company_name\": \"<%= event_payload&.dig('company_name', 1) || event_payload.dig('channel_partner', 'company_name') || channel_partner&.company_name %>\",\n    \"company_type\": \"<%= event_payload&.dig('company_type', 1) || event_payload.dig('channel_partner', 'company_type') || channel_partner&.company_type %>\",\n    \"company_owner_name\": \"<%= event_payload&.dig('primary_owner', 'first_name') || event_payload&.dig('channel_partner', 'primary_user', 'name') || channel_partner&.primary_user&.name %>\",\n    \"company_owner_phone\": \"<%= event_payload&.dig('primary_owner', 'phone') || event_payload&.dig('channel_partner', 'primary_user', 'phone') || channel_partner&.primary_user&.phone %>\",\n    \"interested_services\": \"<%= (event_payload&.dig('interested_services', 1) || event_payload.dig('channel_partner', 'interested_services') || channel_partner&.interested_services)&.to_sentence %>\",\n    \"developers_worked_for\": \"<%= (event_payload&.dig('developers_worked_for', 1) || event_payload.dig('channel_partner', 'developers_worked_for') || channel_partner&.developers_worked_for)&.to_sentence %>\",\n    \"pan_number\": \"<%= event_payload&.dig('pan_number', 1) || event_payload.dig('channel_partner', 'pan_number') || channel_partner&.pan_number %>\",\n    \"rera_number\": \"<%= event_payload&.dig('rera_id', 1) || event_payload.dig('channel_partner', 'rera_id') || channel_partner&.rera_id %>\",\n    \"gstin_number\": \"<%= event_payload&.dig('gstin_number', 1) || event_payload.dig('channel_partner', 'gstin_number') || channel_partner&.gstin_number %>\",\n    \"manager_name\": \"<%= manager&.name %>\",\n    \"regions\": \"<%= (event_payload&.dig('regions', 1) || event_payload.dig('channel_partner', 'regions') || channel_partner&.regions)&.to_sentence %>\",\n    \"status\": \"<%= event_payload&.dig('status', 1) || event_payload.dig('channel_partner', 'status') || channel_partner&.status %>\",\n    \"referred_by_name\": \"<%= referred_by&.name %>\",\n    \"projects_subscribed\": \"<%= event_payload.dig('interested_projects')&.to_sentence %>\",\n    \"account_status\": \"<%= self.event_payload.dig('is_active', 1).nil? ? (self.is_active? ? 'active' : 'inactive') : (self.event_payload.dig('is_active', 1).present? ?  'active' : 'inactive') %>\",\n    \"sign_in_count\": \"<%= event_payload.dig('sign_in_count', 1) || self.sign_in_count %>\",\n    \"last_sign_in_time\": \"<%= I18n.l((event_payload.dig('current_sign_in_at', 1) || self.current_sign_in_at || Time.now).in_time_zone(self.time_zone)) %>\"\n}}",
                        "resource_class" => "User",
              "response_crm_id_location" => nil
          }
      ]

      kylas_crm_data = [{"_type"=>"Crm::Api::Post", "event"=>"", "path"=>"/v1/deals/", "request_payload"=>"<% if self.manager_id.present? && self.manager.kylas_custom_fields_option_id.dig('deal').present? %>\n    <% deal_custom_field = {\n        \"\#{self.booking_portal_client.kylas_custom_fields.dig(:deal, :name)}\": {\n            \"id\": self.manager.kylas_custom_fields_option_id.dig('deal'),\n            \"name\": self.manager.name\n        }\n    } %>\n<% end %>\n<% sales = User.where(role: 'sales', booking_portal_client_id: self.booking_portal_client.id).first %>\n{\n    \"ownedBy\": {\n        \"id\": <%= sales.kylas_user_id %>,\n        \"name\":  \"<%= sales.name %>\"\n    },\n    \"name\": \"<%= self.name %>\",\n    \"products\": [\n        {\n            \"id\": \"<%= self.project&.kylas_product_id %>\",\n            \"discount\": {\n                \"value\": 0,\n                \"type\": \"PERCENTAGE\"\n            },\n            \"quantity\": 1,\n            \"price\": {\n                \"currencyId\": <%= self.booking_portal_client&.kylas_currency_id %>,\n                \"value\": <%= self.project&.kylas_product_value %>\n            }\n        }\n    ],\n    \"estimatedValue\": {\n        \"currencyId\": <%= self.booking_portal_client&.kylas_currency_id %>,\n        \"value\": <%= self.project&.kylas_product_value %>\n    },\n    \"associatedContacts\": [\n        {\n            \"id\": \"<%= self.user&.kylas_contact_id %>\"\n        }\n    ],\n    \"customFieldValues\": <%= deal_custom_field.present? ? deal_custom_field : {} %>\n}", "resource_class"=>"Lead", "response_crm_id_location"=>"id"}, {"_type"=>"Crm::Api::Post", "event"=>"SearchContact", "path"=>"/v1/search/contact?sort=updatedAt,desc&page=0&size=10", "request_payload"=>"{\n    \"fields\": [\n        \"firstName\",\n        \"lastName\",\n        \"id\",\n        \"customFieldValues\"\n    ],\n    \"jsonRule\": {\n        \"rules\": [\n            {\n                \"id\": \"multi_field\",\n                \"field\": \"multi_field\",\n                \"type\": \"multi_field\",\n                \"input\": \"multi_field\",\n                \"operator\": \"multi_field\",\n                \"value\": \"<%= self.event_payload.with_indifferent_access[\"entity_value\"] %>\"\n            }\n        ],\n        \"condition\": \"AND\",\n        \"valid\": true\n    }\n}", "resource_class"=>"User", "response_crm_id_location"=>"content.0.id"}, {"_type"=>"Crm::Api::Post", "event"=>"", "path"=>"/v1/meetings", "request_payload"=>"<% meeting_custom_field = {} %>\n<% if self.booking_portal_client.kylas_custom_fields.dig(:meeting_project, :id).present? %>\n    <% meeting_custom_field.merge!({\n        \"\#{self.booking_portal_client.kylas_custom_fields.dig(:meeting_project, :name)}\": {\n            \"id\": self.project.kylas_custom_fields_option_id.dig('meeting'),\n            \"name\": self.project.name\n        }\n    }) %>\n<% end %>\n<% if self.manager_id.present? && self.manager.kylas_custom_fields_option_id.dig('meeting').present? %>\n    <% meeting_custom_field.merge!({\n        \"\#{self.booking_portal_client.kylas_custom_fields.dig(:meeting, :name)}\": {\n            \"id\": self.manager.kylas_custom_fields_option_id.dig('meeting'),\n            \"name\": self.manager.name\n        }\n    }) %>\n<% end %>\n<%\n    participants = {\n        \"id\": self.user.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)).to_i,\n        \"entity\": \"contact\",\n      }\n%>\n<% if self.lead&.email.present? %>\n    <% participants.merge!({\"email\": self.lead.email}) %>\n<% end %>\n{\n    \"title\": \"<%= self.lead.name %>\",\n    \"allDay\": false,\n    \"timezone\": {\n        \"id\": 372,\n        \"name\": \"Asia/Calcutta\"\n    },\n    \"status\": \"<%= self.status %>\",\n    \"relatedTo\": [\n        {\n            \"id\": <%= self.lead.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>,\n            \"entity\": \"deal\"\n        }\n    ],\n    \"participants\": [<%= participants %>],\n    \"from\": \"<%= self.scheduled_on.iso8601 %>\",\n    \"to\": \"<%= (self.scheduled_on + 30.minutes).iso8601 %>\",\n    \"customFieldValues\": <%= meeting_custom_field.present? ? meeting_custom_field : {} %>\n}", "resource_class"=>"SiteVisit", "response_crm_id_location"=>"id"}, {"_type"=>"Crm::Api::Put", "event"=>"", "http_method"=>"put", "path"=>"/v1/meetings/<%= self.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>", "request_payload"=>"<% meeting_custom_field = {} %>\n<% if self.booking_portal_client.kylas_custom_fields.dig(:meeting_project, :id).present? %>\n    <% meeting_custom_field.merge!({\n        \"\#{self.booking_portal_client.kylas_custom_fields.dig(:meeting_project, :name)}\": {\n            \"id\": self.project.kylas_custom_fields_option_id.dig('meeting'),\n            \"name\": self.project.name\n        }\n    }) %>\n<% end %>\n<% if self.manager_id.present? && self.manager.kylas_custom_fields_option_id.dig('meeting').present? %>\n    <% meeting_custom_field.merge!({\n        \"\#{self.booking_portal_client.kylas_custom_fields.dig(:meeting, :name)}\": {\n            \"id\": self.manager.kylas_custom_fields_option_id.dig('meeting'),\n            \"name\": self.manager.name\n        }\n    }) %>\n<% end %>\n{\n    \"title\": \"<%= self.lead.name %>\",\n    \"allDay\": false,\n    \"timezone\": {\n        \"id\": 372,\n        \"name\": \"Asia/Calcutta\"\n    },\n    \"status\": \"<%= self.status %>\",\n    \"relatedTo\": [\n        {\n            \"id\": <%= self.lead.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>,\n            \"entity\": \"deal\"\n        }\n    ],\n    \"participants\": <%= self.event_payload %>,\n    \"from\": \"<%= self.scheduled_on.iso8601 %>\",\n    \"to\": \"<%= (self.scheduled_on + 30.minutes).iso8601 %>\",\n    \"customFieldValues\": <%= meeting_custom_field.present? ? meeting_custom_field : {} %>\n}", "resource_class"=>"SiteVisit", "response_crm_id_location"=>nil}, {"_type"=>"Crm::Api::Put", "event"=>"", "http_method"=>"put", "path"=>"/v1/deals/<%= self.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>", "request_payload"=>"<% if self.manager_id.present? && self.manager.kylas_custom_fields_option_id.dig('deal').present? %>\n    <% deal_custom_field = {\n         \"\#{self.booking_portal_client.kylas_custom_fields.dig(:deal, :name)}\": {\n            \"id\": self.manager.kylas_custom_fields_option_id.dig('deal'),\n            \"name\": self.manager.name\n        }\n    } %>\n<% end %>\n<% sales = User.where(role: 'sales', booking_portal_client_id: self.booking_portal_client.id).first %>\n{\n    \"id\": <%= self.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>,\n    \"ownedBy\": {\n        \"id\": <%= sales.kylas_user_id %>,\n        \"name\":  \"<%= sales.name %>\"\n    },\n    \"name\": \"<%= self.name %>\",\n    \"products\": [\n        {\n            \"id\": \"<%= self.project&.kylas_product_id %>\",\n            \"discount\": {\n                \"value\": 0,\n                \"type\": \"PERCENTAGE\"\n            },\n            \"quantity\": 1,\n            \"price\": {\n                \"currencyId\": <%= self.booking_portal_client&.kylas_currency_id %>,\n                \"value\": <%= self.project&.kylas_product_value %>\n            }\n        }\n    ],\n    \"estimatedValue\": {\n        \"currencyId\": <%= self.booking_portal_client&.kylas_currency_id %>,\n        \"value\": <%= self.project&.kylas_product_value %>\n    },\n    \"associatedContacts\": [\n        {\n            \"id\": \"<%= self.user&.kylas_contact_id %>\"\n        }\n    ],\n    \"customFieldValues\": <%= deal_custom_field.present? ? deal_custom_field : {} %>\n}", "resource_class"=>"Lead", "response_crm_id_location"=>nil}, {"_type"=>"Crm::Api::Post", "event"=>"", "path"=>"/v1/webhooks", "request_payload"=>"<% crm_base = Crm::Base.where(domain: ENV_CONFIG.dig(:kylas, :base_url), booking_portal_client_id: self.id).first %>\n{\n    \"name\": \"User Webhook\",\n    \"requestType\": \"POST\",\n    \"url\": \"<%= ENV_CONFIG[:iris_marketplace_host] %>/api/<%= ENV_CONFIG.dig(:kylas, :version) %>/users/create_or_update_user\",\n    \"authenticationType\": \"API_KEY\",\n    \"authenticationKey\": \"<%= Base64.strict_encode64({'keyName':'Api-Key','value':crm_base.api_key}.to_json)%>\",\n    \"events\": [\n        \"USER_CREATED\",\n        \"USER_UPDATED\",\n        \"USER_ACTIVATED\",\n        \"USER_DEACTIVATED\"\n    ],\n    \"active\": true\n}", "resource_class"=>"Client", "response_crm_id_location"=>"id"}, {"_type"=>"Crm::Api::Post", "event"=>"", "path"=>"/v1/products", "request_payload"=>"{\n    \"isActive\": true,\n    \"name\": \"<%= self.name %>\",\n    \"price\": {\n      \"currencyId\": <%= self.booking_portal_client&.kylas_currency_id %>,\n      \"value\": \"<%= self.event_payload&.with_indifferent_access['agreement_price'] %>\"\n    },\n    \"customFieldValues\": {}\n}", "resource_class"=>"BookingDetail", "response_crm_id_location"=>"id"}, {"_type"=>"Crm::Api::Put", "event"=>"", "http_method"=>"patch", "path"=>"/v1/deals/<%= self&.lead&.kylas_deal_id || self.kylas_deal_id %>", "request_payload"=>"<% event_payload = self.event_payload.with_indifferent_access %>\n<% if event_payload['contact'].present? %>\n    <% contact = event_payload['contact'] %>\n    <% contact_payload = {\n        associatedContacts: {\n        operation: \"ADD\",\n        values: [contact]\n        }\n    } %>\n    <% payload = contact_payload %>\n<% elsif event_payload['product'].present? %>\n    <% products = event_payload['product'].try(:is_a?, Array) ? event_payload['product'] : [event_payload['product']] %>\n    <% products_payload =  {\n        products: {\n            operation: 'ADD', \n            values: products.collect{ |product|\n                {\n                    id: product['id'],\n                    name: product['name'], \n                    quantity: 1,\n                    price: {\n                        currencyId: product.dig('price','currency' ,'id') || product.dig('price', 'currencyId'),\n                        value: product.dig('price','value').to_f\n                    },\n                    discount: {\n                        type: 'PERCENTAGE', \n                        value: 0.0\n                    }\n                }\n            }\n        }\n    } %>\n    <% payload = products_payload %>\n<% elsif event_payload[:pipeline].present? %>\n    <% pipeline = event_payload[:pipeline] %>\n    <% pipeline_payload = {\n        pipeline: {\n            id: pipeline['pipeline_id'],\n            stage: {\n                id: pipeline['pipeline_stage_id']\n            }\n        }\n    } %>\n    <% payload = pipeline_payload %>\n<% end %>\n<%\n  final_payload = {\n    'deal': payload,\n    'executeWorkflow': true,\n    'sendNotification': false\n  }\n%>\n<%= final_payload %>", "resource_class"=>"BookingDetail", "response_crm_id_location"=>nil}, {"_type"=>"Crm::Api::Post", "event"=>"CreateContact", "path"=>"/v1/contacts", "request_payload"=>"<% email = [{:type=>\"OFFICE\", :value=>self.email, :primary=>true}] %>\n<% if self.phone.present? %>\n    <% phone = Phonelib.parse(self.phone) %>\n    <% phones = [{:type=>\"MOBILE\", :code=> phone.country, :dialCode=>\"+\#{phone.country_code}\", :value=> phone.national(false).sub(/^0/, ''), :primary=>true}] %>\n<% end %>\n<% if self.email.present? %>\n    <% emails = [{type: \"OFFICE\", value: self.email, primary: true}] %>\n<% end %>\n\n<% parsed_contact = {\n    firstName: self.first_name,\n    lastName: self.last_name,\n    facebook: nil,\n    twitter: nil,\n    linkedin: nil,\n    customFieldValues: {}\n  } %>\n\n<% if (defined?(emails) && emails.present?) %>\n    <% parsed_contact.merge!(emails: emails)  %>\n<% end %>\n<% if (defined?(phones) && phones.present?) %>\n    <% parsed_contact.merge!(phoneNumbers: phones)  %>\n<% end %>\n<%= parsed_contact %>", "resource_class"=>"User", "response_crm_id_location"=>"id"}, {"_type"=>"Crm::Api::Put", "event"=>"DeactivateProduct", "http_method"=>"put", "path"=>"/v1/products/<%= self.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>", "request_payload"=>"{\n    \"id\": \"<%= self.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>\",\n    \"name\": \"<%= self.name %>\",\n    \"price\": {\n      \"currencyId\": <%= self.booking_portal_client&.kylas_currency_id %>,\n      \"value\": \"<%= self.agreement_price %>\"\n    },\n    \"description\": \"NA\",\n    \"isActive\": false\n}", "resource_class"=>"BookingDetail", "response_crm_id_location"=>nil}, {"_type"=>"Crm::Api::Post", "event"=>"", "path"=>"/v1/notes/relation", "request_payload"=>"{\n    \"sourceEntity\": {\n        \"description\": \"<div><%= self.note.html_safe %></div><small>Added By: <%= self&.creator&.name %></small>\"\n    },\n    \"targetEntityId\": \"<%= self.notable.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) %>\",\n    \"targetEntityType\": \"DEAL\"\n}", "resource_class"=>"Note", "response_crm_id_location"=>"id"}, {"_type"=>"Crm::Api::Put", "event"=>"UpdateContact", "http_method"=>"put", "path"=>"/v1/contacts/<%= self.crm_reference_id(ENV_CONFIG.dig(:kylas, :base_url)) || self.kylas_contact_id %>", "request_payload"=>"<% email = [{:type=>\"OFFICE\", :value=>self.email, :primary=>true}] %>\n<% if self.phone.present? %>\n    <% phone = Phonelib.parse(self.phone) %>\n    <% phones = [{:type=>\"MOBILE\", :code=> phone.country, :dialCode=>\"+\#{phone.country_code}\", :value=> phone.national(false).sub(/^0/, ''), :primary=>true}] %>\n<% end %>\n<% if self.email.present? %>\n    <% emails = [{type: \"OFFICE\", value: self.email, primary: true}] %>\n<% end %>\n\n<% parsed_contact = {\n    firstName: self.first_name,\n    lastName: self.last_name\n  } %>\n\n<% if (defined?(emails) && emails.present?) %>\n    <% parsed_contact.merge!(emails: emails)  %>\n<% end %>\n<% if (defined?(phones) && phones.present?) %>\n    <% parsed_contact.merge!(phoneNumbers: phones)  %>\n<% end %>\n<%= parsed_contact %>", "resource_class"=>"User", "response_crm_id_location"=>nil}]

      if crm_base.present?
        case crm_base.domain
        when ENV_CONFIG.dig(:interakt, :base_url)
          interakt_crm_data.each do |crm_api|
            puts Crm::Api::Post.create(base_id: crm_base_id, path: crm_api['path'], resource_class: crm_api['resource_class'], event: crm_api['event'], request_payload: crm_api['request_payload'])
          end
        when ENV_CONFIG.dig(:onesignal, :base_url)
          onesignal_crm_data.each do |crm_api|
            puts Crm::Api::Put.create(base_id: crm_base_id, path: '/api/v1/apps/<%= ENV_CONFIG[:onesignal][:app_id] %>/users/<%= self.id.to_s %>', resource_class: crm_api['resource_class'], event: crm_api['event'], request_payload: crm_api['request_payload'])
          end
        when ENV_CONFIG.dig(:razorpay, :base_url)
          razorpay_crm_data.each do |crm_api|
            klass = crm_api['_type']
            if klass
              attrs = {base_id: crm_base.id, path: crm_api['path'], resource_class: crm_api['resource_class'], request_payload: crm_api['request_payload']}
              attrs['http_method'] = crm_api['http_method'] if crm_api['http_method'].present?
              puts Object.const_get(klass).create(attrs)
            end
          end
        when ENV_CONFIG.dig(:kylas, :base_url)
          kylas_crm_data.each do |crm_api|
            klass = crm_api['_type']
            if klass
              attrs = {base_id: crm_base.id, path: crm_api['path'], resource_class: crm_api['resource_class'], request_payload: crm_api['request_payload'], event: crm_api['event'], booking_portal_client_id: crm_base.booking_portal_client.id, response_crm_id_location: crm_api['response_crm_id_location']}
              attrs['http_method'] = crm_api['http_method'] if crm_api['http_method'].present?
              puts Object.const_get(klass).create(attrs)
            end
          end
        end
      else
        puts 'Crm Base Not found'
      end

    end
  end
end
