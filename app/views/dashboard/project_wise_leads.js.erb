var barOptions_stacked = {
  indexAxis: 'y',
  scales: {
    x: {
      stacked: true
    },
    y: {
      ticks: {
        mirror: true,
        labelOffset: -20,
        padding: 10
      },
      stacked: true,
      grid: {
        display: false
      }
    }
  },
  pointLabelFontFamily: "Quadon Extra Bold",
  scaleFontFamily: "Quadon Extra Bold",
  maintainAspectRatio: false,
  noDataMsg: "You have not added any lead yet.\nStart exploring the projects and add your leads."
};

var colors = [
  Amura.chart_colors.light_blue,
  Amura.chart_colors.light_purple,
  Amura.chart_colors.light_red,
  Amura.chart_colors.light_yellow,
  Amura.chart_colors.light_cyan,
  Amura.chart_colors.light_green,
  Amura.chart_colors.light_green_1,
  Amura.chart_colors.light_grey,
]

// Take first 4 projects data sorted by max leads to render in chart
<% @data = { projects: @stage_wise_leads.values.map(&:keys).flatten.uniq, stage_data: @stage_wise_leads } %>
var dataset = <%= raw(@data[:stage_data].each_with_index.map do |(k, v), i|
  {
    label: (k&.titleize || 'Incoming'),
    categoryPercentage: (0.07 * @data[:projects].length),
    data: @data[:projects].collect { |p_name| v[p_name] || 0 },
    fill: false
  }
end.to_json) %>
var dataset = _.map(dataset, function(data, i) { data.backgroundColor = colors[i]; return data; });
var ctx = document.getElementById("stage_wise_bar_chart");
var myChart = new Chart(ctx, {
  type: 'bar',
  data: {
    labels: <%= raw @data[:projects] %>,
    datasets: dataset
  },
  options: barOptions_stacked,
});

var ctx1 = document.getElementById("total_brokerage_Chart");
var total_brokerage_Chart = new Chart(ctx1, {
  type: 'bar',
  data: {
    labels: ["Oct 2020", "Nov 2020", "Dec 2020"],
    datasets: [{
      label: 'Paid',
      categoryPercentage: 0.2,
      data: [15, 85, 40],
      backgroundColor: Amura.chart_colors.green
    }, {
      label: 'Pending',
      categoryPercentage: 0.2,
      data: [23, 55, 90],
      backgroundColor: Amura.chart_colors.light_green
    }]
  },

  options: {
    indexAxis: 'x',
  scales: {
    x: {
      stacked: true,
      grid: {
        display: false
      }
    },
    y: {
      ticks: {
        mirror: true,
        labelOffset: -20,
        padding: 10
      },
      stacked: true,
    }
  },
  pointLabelFontFamily: "Quadon Extra Bold",
  scaleFontFamily: "Quadon Extra Bold",
  maintainAspectRatio: false
  }
});
