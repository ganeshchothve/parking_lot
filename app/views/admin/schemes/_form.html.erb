<%= nested_form_for([:admin, @scheme], local: true, remote: true, html: {class: 'modal-remote-form validate-form', "data-resource-type": global_labels['schemes'], "data-type": "json", id: 'scheme_form'}) do |f| %>
<div class="modal fade right fixed-header-footer" role="dialog" id="modal-remote-form-inner">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="title"><%= t("controller.schemes.#{action_name}.link_name") %></h3>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body theme-form">
        <div class="mb-3">
          <%= f.label :name, class: 'label-required' %>
          <%= f.text_field :name, autofocus: true, class: "form-control", required: 'required', disabled: !policy([:admin, @scheme]).editable_field?("name") %>
        </div>
        <div class="mb-3">
          <%= f.label :project_id, class: 'label-required' %>
          <%= f.select :project_id, options_for_select(Project.all.collect{|p| [p.name, p.id ]}, (f.object.new_record? ? Project.first.id : f.object.project_id)) , {prompt: I18n.t("global.select")}, class: 'selectize project_select', required: 'required', disabled: !policy([:admin, @scheme]).editable_field?("project_id") %>
        </div>
        <div class="mb-3">
          <%= f.label :project_tower_id, class: 'label-required' %>
          <%= f.select :project_tower_id, ProjectTower.all.collect{|pt| [pt.name, pt.id ]} , {prompt: I18n.t("global.select")}, class: 'selectize project_tower_select', required: 'required', disabled: !policy([:admin, @scheme]).editable_field?("project_tower_id"), data: { url: admin_project_towers_path } %>
        </div>
        <div class="mb-3">
          <%= f.label :user_role, class: 'control-label' %>
          <%= f.select :user_role, User.available_roles(current_client).select{|role| User.buyer_roles(current_client).include?(role)}.collect{|x| [ t("mongois.attributes.user/role.#{x}"), x] }, {prompt: I18n.t("global.select")}, class: 'selectize', disabled: !policy([:admin, @scheme]).editable_field?("user_role") %>
        </div>
        <div class="mb-3">
          <%= f.label :user, class: 'control-label' %>
          <%= f.select :user_ids, options_from_collection_for_select(User.where(role: 'user'), "id", "ds_name", f.object.user_ids), {prompt: I18n.t("global.select")}, multiple: "multiple", class: "selectize-remote", data: { url: admin_users_path, params: {fltrs: {role: {"$eq": 'user' } } } } %>
        </div>

        <div class="mb-3">
          <%= f.label :can_be_applied_by, class: '' %>
          <%= f.select :can_be_applied_by, filter_user_role_options(current_client), {prompt: I18n.t("global.select")}, class: 'selectize', multiple: "multiple", disabled: !policy([:admin, @scheme]).editable_field?("can_be_applied_by") %>
        </div>
        <div class="mb-3">
          <%= f.label :default_for_users, class: 'control-label' %>
          <%= f.select :default_for_user_ids, options_from_collection_for_select(User.where(booking_portal_client_id: current_client.id, role: 'channel_partner'), "id", "ds_name", f.object.default_for_user_ids), {prompt: I18n.t("global.select")}, multiple: "multiple", class: "selectize-remote", data: { url: admin_users_path, params: {fltrs: {role: {"$eq": 'channel_partner' } } } } %>
        </div>
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <%= f.label :payment_schedule_template_id, class: 'label-required' %>
              <%= f.select :payment_schedule_template_id, ::Template::PaymentScheduleTemplate.where(booking_portal_client_id: current_client.id).collect{|x| [x.name, x.id]}, {}, class: "selectize", required: 'required', disabled: !policy([:admin, @scheme]).editable_field?("payment_schedule_template_id") %>
            </div>
          </div>
          <div class="col-md-6">
            <div class="mb-3">
              <%= f.label :cost_sheet_template_id, class: 'label-required' %>
              <%= f.select :cost_sheet_template_id, ::Template::CostSheetTemplate.where(booking_portal_client_id: current_client.id).collect{|x| [x.name, x.id]}, {}, class: "selectize", required: 'required', disabled: !policy([:admin, @scheme]).editable_field?("cost_sheet_template_id") %>
            </div>
          </div>
        </div>
        <div class="payment-adjustments">
          <% editable_payment_adjustment = policy([:admin, @scheme]).editable_field?("payment_adjustments_attributes")%>
          <% if editable_payment_adjustment %>
            <%= f.link_to_add I18n.t("global.add"), :payment_adjustments, :data => { :target => ".payment-adjustments" }, class: "btn btn-primary d-inline-block" %>
          <% end %>
          <%= f.fields_for :payment_adjustments do |adj|%>
            <% if editable_payment_adjustment %>
              <%= adj.link_to_remove icon("far", "times-circle d-inline-block") %>
            <% end %>
            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <%= adj.label :name, class: 'label-required' %>
                  <%= adj.text_field :name, class: "form-control", required: 'required', disabled: !editable_payment_adjustment %>
                </div>
              </div>
              <div class="col-md-6">
                <div class="mb-3">
                  <%= adj.label :field, class: 'label-required' %>
                  <%= adj.select :field, Scheme::FIELDS.collect{|sf| [t("mongoid.attributes.payment_adjustment/field.#{sf}"), sf]}, {prompt: I18n.t("global.select")}, class: 'selectize-tags', disabled: !editable_payment_adjustment %>
                </div>
              </div>
            </div>
            <div class="mb-3">
              <%= adj.label :absolute_value, class: 'label-required' %>
              <%= adj.number_field :absolute_value, class: "form-control", disabled: !editable_payment_adjustment %>
              <p class="small text-muted"><%= I18n.t("controller.project_units.total_adjustment") %></p>
            </div>
            <div class="mb-3">
              <%= adj.label :formula, class: 'label-required' %>
              <%= adj.text_field :formula, class: "form-control", disabled: !editable_payment_adjustment %>
              <p class="small text-muted"><%= I18n.t("controller.project_units.total_adjustment") %></p>
            </div>
          <% end %>
        </div>
        <% if policy([:admin, @scheme]).editable_field?("event") %>
          <div class="mb-3">
            <%= f.label :status, class: 'label-required' %>
            <%
              events = @scheme.aasm.events(permitted: true).collect{|x| x.name.to_s}
              events = events.collect{|x| [x.to_s.titleize, x.to_s] }
            %>
            <%= f.select :event, options_for_select(events, @scheme.status), {prompt: I18n.t("global.select")}, class: 'selectize', required: "required" %>
          </div>
        <% end %>
      </div>
      <div class="modal-footer text-end">
        <%= f.submit I18n.t("global.save"), class: "btn btn-primary" %>
      </div>
    </div>
  </div>
</div>
<% end %>
<%= javascript_tag do %>
$(document).ready(function(){
  $('#scheme_user_role').change(function(){
    var $select = $("#scheme_user_ids").selectize();
    var selectize = $select[0].selectize;
    selectize.setValue('');
    selectize.clearOptions();
    var filter = $("#scheme_user_ids").data('params')
    filter.fltrs.role.$eq = $(this).val()
    $("#scheme_user_ids").data('params', filter)
  });
  FormInitializer.init($("#scheme_form"));
  $('.project_select').on('change', function(e){
    var projectId = $(this).val();
    var $paymentScheduleId = $('#scheme_payment_schedule_template_id').selectize();
    var $costSheetId = $('#scheme_cost_sheet_template_id').selectize();
    if(!_.isEmpty(projectId)) {
      // Fetch Payment Schedule Templates
      $.ajax({
        url: "/admin/client/templates",
        data: {
          fltrs: {
            project_id: projectId,
            _type: "Template::PaymentScheduleTemplate"
          }
        },
        type: "get",
        dataType: "json",
        success: function(data){
          var $paymentScheduleIdSelectize = $paymentScheduleId[0].selectize;
          $paymentScheduleIdSelectize.setValue('');
          $paymentScheduleIdSelectize.clearOptions();
          var options = _.map(data, function(d) { return { value: d._id, text: d.name } });
          $paymentScheduleIdSelectize.addOption(options)
          $paymentScheduleIdSelectize.refreshOptions(false);
          var _paymentScheduleId = '<%= @scheme.payment_schedule_template_id %>';
          if(!_.isEmpty(_paymentScheduleId)){
            $paymentScheduleIdSelectize.addItem(_paymentScheduleId, true);
          }
        },
        error: function(){
          Amura.global_error_handler('<%= I18n.t("global.fetch_errors.payment_schedules") %>')
        }
      });

      // Fetch Costsheet Templates
      $.ajax({
        url: "/admin/client/templates",
        data: {
          fltrs: {
            project_id: projectId,
            _type: "Template::CostSheetTemplate"
          }
        },
        type: "get",
        dataType: "json",
        success: function(data){
          var $costSheetIdSelectize = $costSheetId[0].selectize;
          $costSheetIdSelectize.setValue('');
          $costSheetIdSelectize.clearOptions();
          var options = _.map(data, function(d) { return { value: d._id, text: d.name } });
          $costSheetIdSelectize.addOption(options)
          $costSheetIdSelectize.refreshOptions(false);
          var _costSheetId = '<%= @scheme.cost_sheet_template_id.to_s %>';
          if(!_.isEmpty(_costSheetId)){
            $costSheetIdSelectize.addItem(_costSheetId, true);
          }
        },
        error: function(){
          Amura.global_error_handler('<%= I18n.t("global.fetch_errors.cost_sheet_templates") %>')
        }
      });
    }
  }).trigger('change');
});
<% end %>
