<%= nested_form_for([:admin, @incentive_scheme], local: true, remote: true, html: {class: 'modal-remote-form validate-form', "data-resource-type": global_labels['incentive_schemes'], "data-type": "json", id: 'incentive_scheme_form'}) do |f| %>
<div class="modal fade right fixed-header-footer" role="dialog" id="modal-remote-form-inner">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">

      <div class="modal-header">
        <h3 class="title"><%= t("controller.incentive_schemes.#{action_name}.link_name") %></h3>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body theme-form">
        <div class="mb-3">
          <%= f.label :name, class: 'label-required' %>
          <%= f.text_field :name, autofocus: true, class: "form-control", required: 'required', disabled: !policy([:admin, @incentive_scheme]).editable_field?("name") %>
        </div>
        <div class="mb-3">
          <%= f.label :description, class: 'label-required' %>
          <%= f.text_area :description, rows: 5, autofocus: true, class: "form-control summernote", required: 'required', disabled: !policy([:admin, @incentive_scheme]).editable_field?("description") %>
        </div>
        <% unless f.object.default? %>
          <div class="mb-3">
            <%= f.label :project_id %>
            <%= f.select :project_id, options_from_collection_for_select(f.object.project_id ? Project.where(_id: f.object.project_id) : [], "id", "ds_name", f.object.project_id), {prompt: 'Select Project'}, class: 'selectize-remote project_select', data: {url: admin_projects_path}, disabled: !policy([:admin, @incentive_scheme]).editable_field?("project_id") %>
          </div>
          <div class="mb-3">
            <%= f.label :project_tower_id %>
            <%= f.select :project_tower_id, ProjectTower.all.collect{|pt| [pt.name, pt.id ]}, {prompt: true}, class: 'selectize project_tower_select', disabled: !policy([:admin, @incentive_scheme]).editable_field?("project_tower_id"), data: { url: admin_project_towers_path } %>
          </div>
          <div class="mb-3">
            <%= f.label :tier_id %>
            <%= f.select :tier_id, Tier.all.collect{|tier| [tier.name, tier.id ]}, {prompt: true}, class: 'selectize', disabled: !policy([:admin, @incentive_scheme]).editable_field?("tier_id") %>
          </div>
          <div class='row'>
            <div class='col-md-6'>
              <div class="mb-3">
                <%= f.label :starts_on, class: (f.object.default? ? '' : 'label-required') %>
                <%= f.text_field :starts_on, class: 'form-control datepicker', required: (f.object.default? ? false : 'required'), "data-min-date": (f.object.starts_on.present? && f.object.starts_on < Date.today) ? f.object.starts_on.strftime("%d/%m/%Y") : Date.today.strftime("%d/%m/%Y"), disabled: !policy([:admin, @incentive_scheme]).editable_field?("starts_on"), value: f.object.starts_on.present? ? f.object.starts_on.strftime("%d/%m/%Y") : nil %>
              </div>
            </div>
            <div class='col-md-6'>
              <div class="mb-3">
                <%= f.label :ends_on, class: (f.object.default? ? '' : 'label-required') %>
                <%= f.text_field :ends_on, class: 'form-control datepicker', required: (f.object.default? ? false : 'required'), "data-min-date": (f.object.ends_on.present? && f.object.ends_on < Date.today) ? f.object.ends_on.strftime("%d/%m/%Y") : Date.today.strftime("%d/%m/%Y"), disabled: !policy([:admin, @incentive_scheme]).editable_field?("ends_on"), value: f.object.ends_on.present? ? f.object.ends_on.strftime("%d/%m/%Y") : nil %>
              </div>
            </div>
          </div>
        <% end %>
        <div class="mb-3">
          <%= f.label :resource_class, class: 'label-required' %>
          <%= f.select :resource_class, filter_incentive_scheme_resources, {prompt: 'Select'}, class: "selectize", required: true, disabled: !policy([current_user_role_group, @incentive_scheme]).editable_field?("resource_class") %>
        </div>
        <div class="mb-3">
          <%= f.label :category, class: 'label-required' %>
          <%= f.select :category, IncentiveScheme::CATEGORIES.collect{|x| [t("mongoid.attributes.incentive_scheme/categories.#{x}"), x]}, {prompt: 'Select'}, class: "selectize", required: true, disabled: !policy([current_user_role_group, @incentive_scheme]).editable_field?("category") %>
        </div>
        <div class="mb-3">
          <%= f.label :brokerage_type, class: 'label-required' %>
          <%= f.select :brokerage_type, IncentiveScheme::BROKERAGE_TYPE.collect{|x| [t("mongoid.attributes.incentive_scheme/brokerage_type.#{x}"), x]}, {prompt: 'Select'}, class: "selectize", required: true, disabled: !policy([current_user_role_group, @incentive_scheme]).editable_field?("brokerage_type") %>
        </div>
        <div class="mb-3">
          <%= f.label :payment_to, class: 'label-required' %>
          <%= f.select :payment_to, IncentiveScheme::PAYMENT_TO.collect{|x| [t("mongoid.attributes.incentive_scheme/payment_to.#{x}"), x]}, {prompt: 'Select'}, class: "selectize", required: true, disabled: !policy([current_user_role_group, @incentive_scheme]).editable_field?("payment_to") %>
        </div>
        <div class="mb-3">
          <%= f.label :auto_apply, class: 'label-required mb-2' %>
          <div class="form-check form-check-inline">
            <%= f.radio_button :auto_apply, true, required: 'required', class: "form-check-input wd-22" %>
            <%= f.label :auto_apply, "Yes", class: "form-check-label d-inline-block ms-2" %>
          </div>
          <div class="form-check form-check-inline mb-3">
            <%= f.radio_button :auto_apply, false, required: 'required', class: "form-check-input wd-22" %>
            <%= f.label :auto_apply, "No", class: "form-check-label d-inline-block ms-2" %>
          </div>
          <div class="mb-3">
            <%= f.label :terms_and_conditions, class: 'label-required mb-2' %>
            <%= f.text_area :terms_and_conditions, rows: 5, autofocus: true, class: "form-control summernote", required: 'required', disabled: !policy([:admin, @incentive_scheme]).editable_field?("terms_and_conditions") %>
          </div>
        </div>
        <div class="mb-3">
          <%= f.label :ladder_strategy, class: 'label-required' %>
          <%= f.select :ladder_strategy, IncentiveScheme::STRATEGY.collect {|x| [x.titleize, x]}, {prompt: true}, class: 'selectize', required: 'required', disabled: !policy([:admin, @incentive_scheme]).editable_field?("ladder_strategy") %>
        </div>
        <div class="mb-3">
          <% if f.object.new_record? %>
            <%= f.hidden_field :event, value: 'draft' %>
          <% else %>
            <%= f.label :status, class: 'control-label' %>
            <%
                statuses = available_statuses(@incentive_scheme)
              %>
            <%= f.select :event, options_for_select(statuses.collect{|rec| [t("mongoid.attributes.incentive_scheme/status.#{rec.to_s}"), rec.to_s]}, @incentive_scheme.status), {prompt: true}, class: 'selectize', required: 'required', disabled: !policy([:admin, @incentive_scheme]).editable_field?("event") %>
          <% end %>
        </div>
        <div class="ladders mt-3">
          <% editable_ladders = policy([:admin, @incentive_scheme]).editable_field?("ladders_attributes")%>
          <% if editable_ladders %>
            <div class='text-right'>
              <%= f.link_to_add "Add Ladder", :ladders, :data => { :target => ".ladders" }, class: 'btn btn-secondary' %>
            </div>
          <% end %>
          <%= f.fields_for :ladders do |lad|%>
            <h5 class="mt-3">Ladder - Stage <span class='stage'><%= lad.object.stage %></span>
              <% if editable_ladders %>
                <span class='pl-2 text-right'>
                  <%= lad.link_to_remove icon("far", "times-circle") %>
                </span>
              <% end %>
            </h6>
            <hr>
            <div class='row'>
              <%= lad.hidden_field :stage, class: 'stage' %>
              <div class='col-md-6'>
                <div class="mb-3">
                  <%= lad.label :start_value, class: 'label-required' %>
                  <%= lad.number_field :start_value, class:'form-control', required: 'required', disabled: !editable_ladders %>
                </div>
              </div>
              <div class='col-md-6'>
                <div class="mb-3">
                  <%= lad.label :end_value, class: '' %>
                  <%= lad.number_field :end_value, class:'form-control', disabled: !editable_ladders %>
                </div>
              </div>
              <!--
              <div class='col-md-12'>
                <div class="mb-3">
                  <%#= lad.label :inclusive, class: 'label-required' %>
                  <div class="form-check form-check-inline">
                    <%#= lad.radio_button :inclusive, true, required: 'required', class: "form-check-input" %>
                    <%#= lad.label :inclusive, "Yes", class: "form-check-label" %>
                  </div>
                  <div class="form-check form-check-inline">
                    <%#= lad.radio_button :inclusive, false, required: 'required', class: "form-check-input" %>
                    <%#= lad.label :inclusive, "No", class: "form-check-label" %>
                  </div>
                </div>
              </div>
              -->
            </div>
            <div class="payment-adjustment">
              <%= lad.fields_for :payment_adjustment do |adj|%>
                <h6 class="mt-3">Incentive Calculation</h6>
                <div class="row">
                  <div class="col-md-12">
                    <div class="mb-3">
                      <%= adj.label :absolute_value, class: '' %>
                      <%= adj.number_field :absolute_value, class: "form-control", disabled: !editable_ladders %>
                    </div>
                  </div>
                  <div class="col-md-12">
                    <div class="mb-3">
                      <%= adj.label :formula, class: '' %>
                      <%= adj.text_field :formula, class: "form-control", disabled: !editable_ladders %>
                      <p class="small text-muted">This will be evaluated in the context of resource (which can be a Booking, Payment, etc)</p>
                    </div>
                  </div>
                </div>
              <% end %>
            </div>
          <% end %>
          <hr>
        </div>
      </div>

      <div class="modal-footer text-end">
        <%= f.submit "Save", class: "btn btn-primary" %>
      </div>

    </div>
  </div>
</div>
<% end %>
<%= javascript_tag do %>
$(document).ready(function(){
  FormInitializer.init($("#incentive_scheme_form"));

  $('#incentive_scheme_form #incentive_scheme_resource_class').on('change', function(event) {
    var categories = <%= raw IncentiveScheme::CATEGORIES_PER_RESOURCE.to_json %>;
    var categories_translations = <%= raw t('mongoid.attributes.incentive_scheme/categories').to_json %>;
    var resource = $(event.currentTarget).val();
    var $category_select = $('#incentive_scheme_form #incentive_scheme_category');
    var category = $category_select.val();
    var allowed_categories = categories[resource];
    if(resource != null && allowed_categories != null){
      var category_select = $category_select[0].selectize;
      category_select.setValue('');
      category_select.clearOptions();
      category_select.renderCache = {};
      var options = _.map(allowed_categories, function(d) { return { value: d, text: categories_translations[d] } });
      category_select.addOption(options)
      category_select.refreshOptions(false);
      category_select.settings.placeholder = 'Select Category';
      category_select.updatePlaceholder();
      if(!_.isEmpty(category)){
        category_select.addItem(category, true);
      }
    }
  }).trigger('change');

  $('#incentive_scheme_form #incentive_scheme_category').on('change', function(event) {
    var brokerage_types = <%= raw IncentiveScheme::BROKERAGE_TYPE_PER_CATEOGORY.to_json %>;
    var brokerage_type_translations = <%= raw t('mongoid.attributes.incentive_scheme/brokerage_type').to_json %>;
    var category = $(event.currentTarget).val();
    var $brokerage_type_select = $('#incentive_scheme_form #incentive_scheme_brokerage_type');
    var brokerage_type = $brokerage_type_select.val();
    var allowed_brokerage_types = brokerage_types[category];
    if(category != null && allowed_brokerage_types != null){
      var brokerage_type_select = $brokerage_type_select[0].selectize;
      brokerage_type_select.setValue('');
      brokerage_type_select.clearOptions();
      brokerage_type_select.renderCache = {};
      var options = _.map(allowed_brokerage_types, function(d) { return { value: d, text: brokerage_type_translations[d] } });
      brokerage_type_select.addOption(options)
      brokerage_type_select.refreshOptions(false);
      brokerage_type_select.settings.placeholder = 'Select Brokerage Type';
      brokerage_type_select.updatePlaceholder();
      if(!_.isEmpty(brokerage_type)){
        brokerage_type_select.addItem(brokerage_type, true);
      }
    }
  }).trigger('change');

  $("#incentive_scheme_form").on('nested:fieldAdded', function(event){
    var $field = $(event.field);
    var elems = _.reject($('input[type="hidden"].stage').get(), function(elem) { return $(elem).parents('.fields').css('display') == 'none' });
    var stage = parseInt(_.last(_.reject($(elems).map(function() {return $(this).val(); }).get(), _.isEmpty).sort()) || 0) + 1;
    $field.find("input[type='hidden'].stage").val(stage);
    $field.find("h4 span.stage").text(stage);
  });
  $("#incentive_scheme_form").on('nested:fieldRemoved', function (event) {
    var elems = _.reject($('input[type="hidden"].stage').get(), function(elem) { return $(elem).parents('.fields').css('display') == 'none' });
    _.each(elems, function(elem, i) {
      $(elem).val(i+1);
      $(elem).parents('.fields').find('h4 span.stage').text(i+1);
    });
  });
});
<% end %>
