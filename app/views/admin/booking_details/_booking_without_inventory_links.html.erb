<% if policy([:admin, booking_detail]).show? && !(params[:controller] == 'admin/booking_details' && params[:action] == 'show') %>
  <%= link_to t('helpers.show.link_name', model: BookingDetail.model_name.human ), admin_booking_detail_path(booking_detail), class: 'dropdown-item' %>
<% end %>
<% if policy([current_user_role_group, booking_detail]).choose_template_for_print? %>
  <%= link_to t('controller.templates.choose_template_for_print.link_name'), choose_template_for_print_admin_custom_templates_path(subject_class: booking_detail.class.model_name.i18n_key.to_s, subject_class_id: booking_detail.id.to_s), class: 'dropdown-item modal-remote-form-link' %>
<% end %>
<% if policy([:admin, booking_detail]).edit_booking_without_inventory?(current_project.try(:id).try(:to_s))  %>
  <%= link_to t('helpers.edit.link_name', model: BookingDetail.model_name.human ), edit_booking_without_inventory_admin_booking_detail_path(booking_detail), class: 'dropdown-item modal-remote-form-link' %>
<% end %>
<% if policy([:admin, booking_detail]).can_move_booked_tentative? %>
  <%= link_to I18n.t("controller.booking_details.move_to.booked_tentative"), move_to_next_state_admin_booking_detail_path(booking_detail, status: 'booked_tentative', format: :json), method: 'patch', remote: true, data: { confirm: I18n.t("controller.assets.confirm.booking_moved_tentative"), disable_with: I18n.t("global.please_wait") }, class: "dropdown-item queued move-to-next-state" %>
<% elsif policy([:admin, booking_detail]).can_move_booked_confirmed? %>
  <%= link_to I18n.t("controller.booking_details.move_to.booked_confirmed"), move_to_next_state_admin_booking_detail_path(booking_detail, status: 'booked_confirmed', format: :json), method: 'patch', remote: true, data: {disable_with: I18n.t("global.please_wait"), confirm: I18n.t("controller.assets.confirm.sure")  }, class: "dropdown-item queued move-to-next-state" %>
<% end %>
<% if policy([:admin, booking_detail]).can_move_cancel? %>
  <%= link_to I18n.t("controller.booking_details.move_to.cancel_booking"), move_to_next_state_admin_booking_detail_path(booking_detail, status: 'cancel', format: :json), method: 'patch', remote: true, data: { confirm: I18n.t("controller.assets.confirm.sure"), disable_with: I18n.t("mongoid.attributes.booking_detail/status.cancelling") }, class: 'dropdown-item dropoff move-to-next-state' %>
<% end %>
<% if policy([current_user_role_group, Asset.new(assetable: booking_detail) ]).update? %>
  <%= link_to t('controller.assets.index.link_name'), assetables_path(assetable_type: booking_detail.class.model_name.i18n_key.to_s, assetable_id: booking_detail.id), class: 'dropdown-item modal-remote-form-link' %>
<% end %>
<% if policy([current_user_role_group, booking_detail]).generate_booking_detail_form? && booking_detail.status == 'booked_confirmed' %>
  <%= link_to t('booking_details.links.print_booking_form'), generate_booking_detail_form_admin_booking_detail_path(booking_detail), class: 'dropdown-item', target: '_blank' %>
<% end %>
<% if allow_booking_approval_state_change?(booking_detail) %>
  <% booking_detail.aasm(:approval_status).events(permitted: true).each do |event| %>
    <% if event.name.to_s == 'reject' %>
      <%= link_to t("controller.booking_details.events.approval_status.#{event.name}"), reject_admin_booking_detail_path(booking_detail), class: 'dropdown-item modal-remote-form-link' %>
    <% else %>
      <%= link_to t("controller.booking_details.events.approval_status.#{event.name}"), move_to_next_approval_state_admin_booking_detail_path(booking_detail, {booking_detail: {approval_event: event.name}}), method: :patch, class: 'dropdown-item' %>
    <% end %>
  <% end %>
<% end %>
<%= render 'admin/invoices/invoiceable_links', resource: booking_detail %>

<%= javascript_tag do %>
  $(document).ready(function(){
    $('a.queued, a.dropoff').on('ajax:success', function(event) {
      setTimeout(function() {
        window.location.reload();
      }, 3000);
    });
  });
<% end %>

