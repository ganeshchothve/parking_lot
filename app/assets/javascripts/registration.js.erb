// TODO: handle case if sell.do throws error, the form is hidden and nothing will happen
<% url = Rails.application.routes.url_helpers %>
// TODO: Keep this or the successfully submitted method. Both cannot be calling the registration method
function sell_do_form_successfully_verified(e){
  // register_user_with_portal(e);
}
document.addEventListener("sell_do_form_submitted_with_error", function(){
  setTimeout(function(){
    $('[name="sell_do[form][custom][portal_stage]"]').closest(".selldof_row").hide();
    $(".sell_do_form_actual_container .form_error_message").remove();
    new Noty({
      text: "A user with this email or phone has already registered",
      timeout: 7000,
      type: 'error'
    }).show();
  }, 100);
}, false);

document.addEventListener("sell_do_form_rendered", function(){
  var is_channel_partner = (typeof App !== "undefined" && App.current_user.role == 'channel_partner');;
  if(is_channel_partner) {
     $('[name="sell_do[form][lead][project_id]"]').attr('name', 'iris_project_id');
  }
  var variables = decodeURIComponent(window.location.search.substring(1)).split('&');
  var params = {};
  _.each(variables, function(v){
    if(v.split("=").length == 2){
      params[v.split("=")[0]] = v.split("=")[1];
    }
  });
  setTimeout(function(){
    $('[name="sell_do[form][custom][portal_stage]"]').closest(".selldof_row").hide();
  }, 100);
  $('[name="sell_do[form][custom][custom_referral_code]"]').val(params.custom_referral_code)
  if(params.first_name && params.last_name && params.phone && params.email && params.lead_id){
    $('[name="sell_do[form][lead][first_name]"]').val(params.first_name);
    $('[name="sell_do[form][lead][last_name]"]').val(params.last_name);
    $('[name="sell_do[form][lead][email]"]').val(params.email);
    $('[name="sell_do[form][lead][phone]"]').val(params.phone);
  }
}, false);

function sell_do_form_successfully_submitted(data, event){
  if(typeof App !== "undefined" && App.current_user){
    $(".sell_do_form_container").html('<div class="alert alert-success">We have registered the user. Please wait while we generate login details & send confirmation email / SMS to the user.</div>');
  }else{
    var message = 'Thank you for registering with us. Please wait while we generate login details & send you confirmation email / SMS.'
    $(".sell_do_form_container").html('<div class="alert alert-success">' + message + '</div>');
  }
  register_user_with_portal(data, event);
}

function sell_do_form_submission_failed(e){
  $(".sell_do_form_container").html('<div class="alert alert-success">This customer has already registered with us. We cannot register the same customer again.</div>');
}

function register_user_with_portal(d, e){
  var is_channel_partner = (typeof App !== "undefined" && App.current_user.role == 'channel_partner');
  var data = {
    lead_id: (d.lead_id ? d.lead_id : ""),
    first_name: unescape(d['sell_do[form][lead][first_name]'] ? (d['sell_do[form][lead][first_name]'].replace("+", " ")) : ""),
    last_name: unescape(d['sell_do[form][lead][last_name]'] ? (d['sell_do[form][lead][last_name]'].replace("+", " ")) : ""),
    email: unescape(d['sell_do[form][lead][email]'] ? d['sell_do[form][lead][email]'] : ""),
    phone: unescape(d['sell_do[form][lead][phone]'] ? d['sell_do[form][lead][phone]'].replace(/\+/ig, "") : ""),
    mixpanel_id: unescape(d['sell_do[campaign][mixpanel_id]'] ? d['sell_do[campaign][mixpanel_id]'] : ""),
    project_id: is_channel_partner ? $(e.currentSubmittedForm).find('[name="iris_project_id"] option:selected').val() : unescape(d['sell_do[form][lead][project_id]']),
    project_name: is_channel_partner ? $(e.currentSubmittedForm).find('[name="iris_project_id"] option:selected').text() : $(e.currentSubmittedForm).find('[name="sell_do[form][lead][project_id]"] option:selected').text(),
    lead_details: d.sell_do_lead_details
  }
  data.referral_code = unescape(d['sell_do[form][custom][custom_referral_code]'] ? d['sell_do[form][custom][custom_referral_code]'] : '')
  $.ajax({
    url: '<%= url.check_and_register_path %>',
    data: data,
    dataType: 'json',
    type: 'POST',
    success: function(one, two, three){
      // show success message and redirect to after sign in path
      new Noty({
        text: one.success || 'Request completed successfully',
        timeout: 7000,
        type: 'success'
      }).show();
      setTimeout(function(){
        if(typeof App !== "undefined" && App.current_user){
          if (App.current_user.role == 'channel_partner') {
            window.location = '<%= url.admin_cp_lead_activities_path %>';
          } else {
            window.location = '<%= url.admin_leads_path %>';
          }
        }else{
          if(App.client.preferred_login == "phone" && data.phone){
            window.location = encodeURI('<%= url.new_user_session_path %>?force=true&user[login]=' + encodeURIComponent(data.phone));
          }else{
            // Do Nothing as the user has been created
          }
        }
      }, 3000);
    },
    error: function(one, two, three){
      var str = ''
      if(one.responseJSON.errors){
        if(typeof one.responseJSON.errors == 'object'){
          str += '<ul>';
          _.each(one.responseJSON.errors, function(error){
            str += '<li>' + error + '</li>';
          });
          str += '</ul>';
        }
        if(typeof one.responseJSON.errors == 'string'){
          str = one.responseJSON.errors
        }
        if(str){
          new Noty({
            text: str,
            timeout: 7000,
            type: 'error'
          }).show();
        }
      }
      setTimeout(function(){
        if(_.isEmpty(one.responseJSON.url)){
          if(typeof App !== "undefined" && App.current_user){
            if (App.current_user.role == 'channel_partner') {
              window.location = '<%= url.admin_cp_lead_activities_path %>';
            } else {
              window.location = '<%= url.admin_leads_path %>';
            }
          }else if(one.responseJSON.already_exists){
            window.location = '<%= url.new_user_session_path %>';
          }else{
            window.location = window.location.protocol + "//" + window.location.host + window.location.pathname + '?email=' + data.email + '&phone=' + data.phone + '&first_name=' + data.first_name + '&last_name=' + data.last_name + '&lead_id=' + data.lead_id;
          }
        }else{
          window.location = one.responseJSON.url;
        }
      }, 5000);
    }
  });
}
